{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/tareas/FormTarea.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport TareasContext from \"../../context/tareas/tareasContext\";\n\nconst FormTarea = () => {\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    proyecto\n  } = proyectosContext;\n  const TareasContexts = useContext(TareasContext);\n  const {\n    agregarTareas,\n    errorTarea,\n    obtenerTareas,\n    errorFormularioTarea,\n    tareaSeleccionada,\n    actualizarTarea\n  } = TareasContexts;\n  useEffect(() => {\n    if (tareaSeleccionada !== null) {\n      setTarea(tareaSeleccionada);\n    }\n  }, [tareaSeleccionada]); //state de tareas\n\n  const [Tarea, setTarea] = useState({\n    nombre: \"\",\n    estado: false,\n    proyectoId: null\n  });\n  const {\n    nombre\n  } = Tarea;\n  if (!proyecto) return null;\n  const [proyectoActual] = proyecto;\n\n  const onChangeForm = e => {\n    setTarea({ ...Tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmitForm = e => {\n    e.preventDefault(); //validar\n\n    if (nombre.trim() === \"\") {\n      errorTarea(true);\n      return;\n    } //comporbar si hay que editar o agregar\n\n\n    if (!tareaSeleccionada) {\n      //cargar la tarea\n      Tarea.proyecto = proyectoActual._id;\n      agregarTareas(Tarea);\n    } else {\n      actualizarTarea(Tarea);\n    } //pasar validacion\n\n\n    errorTarea(false); //obterner de vuelta las tareas para que muestre en el state\n\n    obtenerTareas(proyectoActual); //vaciar formulario\n\n    setTarea({ ...Tarea,\n      nombre: \"\"\n    });\n  }; //si no existe ningun proyecto ocultamos el formulario\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"formulario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Tarea...\",\n    name: \"nombre\",\n    value: nombre,\n    onChange: onChangeForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contenedor-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-submit btn-block\",\n    value: tareaSeleccionada ? \"Editar tarea\" : \"Agragar Tarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }))), errorFormularioTarea ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"El nombre es obligatorio\") : null);\n};\n\nexport default FormTarea;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/tareas/FormTarea.js"],"names":["React","useState","useContext","useEffect","proyectoContext","TareasContext","FormTarea","proyectosContext","proyecto","TareasContexts","agregarTareas","errorTarea","obtenerTareas","errorFormularioTarea","tareaSeleccionada","actualizarTarea","setTarea","Tarea","nombre","estado","proyectoId","proyectoActual","onChangeForm","e","target","name","value","onSubmitForm","preventDefault","trim","_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport TareasContext from \"../../context/tareas/tareasContext\";\n\nconst FormTarea = () => {\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    const TareasContexts = useContext(TareasContext);\n    const {\n        agregarTareas,\n        errorTarea,\n        obtenerTareas,\n        errorFormularioTarea,\n        tareaSeleccionada,\n        actualizarTarea,\n    } = TareasContexts;\n\n    useEffect(() => {\n        if (tareaSeleccionada !== null) {\n            setTarea(tareaSeleccionada);\n        }\n    }, [tareaSeleccionada]);\n    //state de tareas\n    const [Tarea, setTarea] = useState({\n        nombre: \"\",\n        estado: false,\n        proyectoId: null,\n    });\n\n    const { nombre } = Tarea;\n\n    if (!proyecto) return null;\n    const [proyectoActual] = proyecto;\n\n    const onChangeForm = (e) => {\n        setTarea({\n            ...Tarea,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onSubmitForm = (e) => {\n        e.preventDefault();\n\n        //validar\n        if (nombre.trim() === \"\") {\n            errorTarea(true);\n            return;\n        }\n\n        //comporbar si hay que editar o agregar\n        if (!tareaSeleccionada) {\n            //cargar la tarea\n            Tarea.proyecto = proyectoActual._id;\n            agregarTareas(Tarea);\n        }else{\n            actualizarTarea(Tarea)\n            \n        }\n\n        //pasar validacion\n        errorTarea(false);\n\n        //obterner de vuelta las tareas para que muestre en el state\n        obtenerTareas(proyectoActual);\n\n        //vaciar formulario\n        setTarea({\n            ...Tarea,\n            nombre: \"\",\n        });\n    };\n\n    //si no existe ningun proyecto ocultamos el formulario\n\n    return (\n        <div className=\"formulario\">\n            <form onSubmit={onSubmitForm}>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Tarea...\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={onChangeForm}\n                    />\n                </div>\n\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-submit btn-block\"\n                        value={\n                            tareaSeleccionada ? \"Editar tarea\" : \"Agragar Tarea\"\n                        }\n                    />\n                </div>\n            </form>\n            {errorFormularioTarea ? (\n                <h2 className=\"mensaje error\">El nombre es obligatorio</h2>\n            ) : null}\n        </div>\n    );\n};\n\nexport default FormTarea;\n"]},"metadata":{},"sourceType":"module"}