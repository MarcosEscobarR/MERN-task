{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/auth/authState.js\";\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport tokenAuth from \"../../config/token\";\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, OBTENER_PROYECTO } from \"../../type\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registraUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\n      console.log(respuesta);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      });\n      obtieneUsuario();\n    } catch (error) {\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //obtiene todo sobre el usuario autenticado\n\n\n  const obtieneUsuario = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth');\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; //cuando el usuario inicia sesion\n\n\n  const iniciaSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/auth\", datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      });\n      obtieneUsuario();\n    } catch (error) {\n      console.log(error);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registraUsuario,\n      iniciaSesion,\n      obtieneUsuario\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/auth/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","OBTENER_PROYECTO","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registraUsuario","datos","respuesta","post","console","log","type","payload","data","obtieneUsuario","error","alerta","msg","response","categoria","get","iniciaSesion","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\n\nimport clienteAxios from \"../../config/axios\"\nimport tokenAuth from \"../../config/token\";\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    OBTENER_PROYECTO,\n} from \"../../type\";\n\nconst AuthState = (props) => {\n    const initialState = {\n        token: localStorage.getItem(\"token\"),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registraUsuario = async (datos) => {\n        try {\n            const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\n             console.log(respuesta);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n\n            })\n\n            obtieneUsuario()\n            \n        } catch (error) {\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: \"alerta-error\"\n            }\n\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            });\n        }\n    };\n\n    //obtiene todo sobre el usuario autenticado\n    const obtieneUsuario = async () => {\n        const token = localStorage.getItem('token')\n\n        if(token){\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            })\n        } catch (error) {\n            console.log(error)\n\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    //cuando el usuario inicia sesion\n    const iniciaSesion = async datos => {\n        try {\n            \n            const respuesta = await clienteAxios.post(\"/api/auth\", datos)\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n\n            obtieneUsuario()\n            \n        } catch (error) {\n            console.log(error);\n             const alerta = {\n                msg: error.response.data.msg,\n                categoria: \"alerta-error\"\n            }\n\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            });         \n        }\n    }\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n\n                registraUsuario,\n                iniciaSesion,\n                obtieneUsuario,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}