{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/route/RutaPrivada.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\"; ///creamos esta ruta privada para que solo los usuarios autenticados puedan ingresar\n//si nos fijamos bien es solo un componente que resive como props otro componente\n//con una compia de los props que teniamos \n//Esta verifica si esta autenticado atravez del state Autenticado y despliega un codigo\n//dependiendo de eso lo que significa qeu si o si tenemos que tener un state que guarde \n//si el usuario esta autenticado o no\n\nconst RutaPrivada = ({\n  component: Component,\n  ...props\n}) => {\n  const authContext = useContext(AuthContext);\n  const {\n    autenticado,\n    cargando,\n    obtieneUsuario\n  } = authContext;\n  useEffect(() => {\n    obtieneUsuario();\n  }, [obtieneUsuario]);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, props, {\n    render: props => !autenticado && !cargando ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default RutaPrivada;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/route/RutaPrivada.js"],"names":["React","useContext","useEffect","Route","Redirect","AuthContext","RutaPrivada","component","Component","props","authContext","autenticado","cargando","obtieneUsuario"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAsC;AACtD,QAAMC,WAAW,GAAGT,UAAU,CAACI,WAAD,CAA9B;AACA,QAAM;AAACM,IAAAA,WAAD;AAAcC,IAAAA,QAAd;AAAwBC,IAAAA;AAAxB,MAA0CH,WAAhD;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,cAAc;AACjB,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAIA,sBACI,oBAAC,KAAD,oBAAWJ,KAAX;AAAkB,IAAA,MAAM,EAAEA,KAAK,IAAI,CAACE,WAAD,IAAgB,CAACC,QAAjB,gBAC/B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD+B,gBAG/B,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AASH,CAjBD;;AAmBA,eAAeH,WAAf","sourcesContent":["import React, {useContext, useEffect} from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\n///creamos esta ruta privada para que solo los usuarios autenticados puedan ingresar\n//si nos fijamos bien es solo un componente que resive como props otro componente\n//con una compia de los props que teniamos \n//Esta verifica si esta autenticado atravez del state Autenticado y despliega un codigo\n//dependiendo de eso lo que significa qeu si o si tenemos que tener un state que guarde \n//si el usuario esta autenticado o no\nconst RutaPrivada = ({component: Component, ...props}) => {\n    const authContext = useContext(AuthContext)\n    const {autenticado, cargando, obtieneUsuario} = authContext;\n\n    useEffect(() => {\n        obtieneUsuario()\n    }, [obtieneUsuario])\n\n    return (\n        <Route {...props} render={props => !autenticado && !cargando ? (\n            <Redirect to=\"/\" />\n        ) : (\n            <Component {...props} /> \n        )} \n\n        />\n    )\n}\n\nexport default RutaPrivada"]},"metadata":{},"sourceType":"module"}