{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/proyectos/proyectoState.js\";\n//aqui definimos todos los state que vamos a hacer correr por el proyecto junto con las\n//diferentes funciones\nimport React, { useReducer } from \"react\";\nimport proyectoReducer from \"./proyectoReducer\"; //importamos el context que creamos\n\nimport ProyectoContext from \"./proyectoContext\";\nimport clienteAxios from \"../../config/axios\";\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTO, AGREGAR_PROYECTO, ERROR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO } from \"../../type/index\"; //aqui definimos el state inicial junto con todos los props\n\nconst ProyectoState = props => {\n  const initialState = {\n    formulario: false,\n    error: false,\n    proyecto: null\n  }; // Dispach para ejecutar las acciones.\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para el CRUD\n  //*funcion que cambia el estado del formulario\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = async () => {\n    try {\n      const respuesta = await clienteAxios.get('api/proyectos');\n      console.log(respuesta);\n      dispatch({\n        type: OBTENER_PROYECTO,\n        payload: respuesta.data.proyectos\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/proyectos\", proyecto);\n      console.log(respuesta); //insertar proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: respuesta.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const mostrarError = () => {\n    dispatch({\n      type: ERROR_FORMULARIO\n    });\n  };\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  };\n\n  const eliminarProyecto = proyectoId => {\n    dispatch({\n      type: ELIMINAR_PROYECTO,\n      payload: proyectoId\n    });\n  }; //en el return ponemos lo que seria el componente principal que vamos a estar importando\n  //durante el proyecto\n\n\n  return /*#__PURE__*/React.createElement(ProyectoContext.Provider, {\n    //pasamos un value que seria el valor inicial del state\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      error: state.error,\n      proyecto: state.proyecto,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoReducer","ProyectoContext","clienteAxios","FORMULARIO_PROYECTO","OBTENER_PROYECTO","AGREGAR_PROYECTO","ERROR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","ProyectoState","props","initialState","formulario","error","proyecto","state","dispatch","mostrarFormulario","type","obtenerProyectos","respuesta","get","console","log","payload","data","proyectos","agregarProyecto","post","mostrarError","proyectoActual","proyectoId","eliminarProyecto","children"],"mappings":"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","sourcesContent":["//aqui definimos todos los state que vamos a hacer correr por el proyecto junto con las\n//diferentes funciones\n\nimport React, { useReducer } from \"react\";\nimport proyectoReducer from \"./proyectoReducer\";\n//importamos el context que creamos\nimport ProyectoContext from \"./proyectoContext\";\nimport clienteAxios from \"../../config/axios\"\n\nimport {\n    FORMULARIO_PROYECTO,\n     OBTENER_PROYECTO,\n      AGREGAR_PROYECTO,\n       ERROR_FORMULARIO,\n       PROYECTO_ACTUAL,\n       ELIMINAR_PROYECTO    \n    } from \"../../type/index\";\n\n\n\n//aqui definimos el state inicial junto con todos los props\nconst ProyectoState = (props) => {\n    const initialState = {\n        \n        formulario: false,\n        error: false,\n        proyecto: null,\n    };\n\n    // Dispach para ejecutar las acciones.\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    //serie de funciones para el CRUD\n    //*funcion que cambia el estado del formulario\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO,\n        });\n    };\n\n    const obtenerProyectos = async () => {\n        try {\n            const respuesta = await clienteAxios.get('api/proyectos')\n            console.log(respuesta);\n            \n\n            dispatch({\n                type: OBTENER_PROYECTO,\n                payload: respuesta.data.proyectos\n            })\n        } catch (error) {\n            console.log(error);\n            \n        }\n    };\n\n    const agregarProyecto = async proyecto => {\n\n        try {\n            const respuesta = await clienteAxios.post(\"/api/proyectos\", proyecto);\n            console.log(respuesta);\n            \n                    //insertar proyecto en el state\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: respuesta.data,\n            \n        })\n    \n        } catch (error) {\n            console.log(error);\n            \n        }\n    }\n    const mostrarError = () => {\n        dispatch({\n            type: ERROR_FORMULARIO\n\n        })        \n    }\n\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    const eliminarProyecto = proyectoId => {\n        dispatch({\n            type: ELIMINAR_PROYECTO,\n            payload: proyectoId\n        })\n    }\n    //en el return ponemos lo que seria el componente principal que vamos a estar importando\n    //durante el proyecto\n    return (\n        <ProyectoContext.Provider\n            //pasamos un value que seria el valor inicial del state\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                error: state.error,\n                proyecto: state.proyecto,\n                \n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto,\n            }}\n        >\n            {/* esta linea dice que va a estar pasando todo el state dentro del sus hijos */}\n            {props.children}\n        </ProyectoContext.Provider>\n    );\n};\n\nexport default ProyectoState;\n"]},"metadata":{},"sourceType":"module"}