{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/proyectos/NuevoProyecto.js\";\nimport React, { Fragment, useState, useContext } from \"react\"; //importamos el context para usarlo en este componente\n//la idea es que cuando no pulsemos el boton de nuevo formulario\n//no se muestre el formulario, para eso usamos el context\n\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst NuevoProyecto = () => {\n  const [proyecto, setpoyecto] = useState({\n    nombre: ''\n  }); //extraemos el context de formulario\n\n  const proyectosContext = useContext(proyectoContext);\n  const {\n    formulario,\n    mostrarFormulario,\n    agregarProyecto,\n    error,\n    mostrarError\n  } = proyectosContext;\n  const {\n    nombre\n  } = proyecto;\n\n  const onChange = e => {\n    setpoyecto({ ...proyecto,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); ///validar\n\n    if (nombre == '') {\n      mostrarError();\n      return;\n    } //pasar al action\n\n\n    agregarProyecto(proyecto);\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-block btn-primario\",\n    onClick: mostrarFormulario,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Nuevo Proyecto\"), formulario ? /*#__PURE__*/React.createElement(\"form\", {\n    className: \"formulario-nuevo-proyecto\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-text\",\n    placeholder: \"Nombre Proyecto\",\n    name: \"nombre\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-primario btn-block\",\n    value: \"Agregar Proyecto\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })) : null, error ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mensaje error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"El nombre del proyecto es obligatorio\") : null);\n};\n\nexport default NuevoProyecto;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/components/proyectos/NuevoProyecto.js"],"names":["React","Fragment","useState","useContext","proyectoContext","NuevoProyecto","proyecto","setpoyecto","nombre","proyectosContext","formulario","mostrarFormulario","agregarProyecto","error","mostrarError","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,UAApC,QAAsD,OAAtD,C,CAEA;AACA;AACA;;AACA,OAAOC,eAAP,MAA4B,yCAA5B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB,QAAM,CAACC,QAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC;AACpCM,IAAAA,MAAM,EAAG;AAD2B,GAAD,CAAvC,CADwB,CAKxB;;AACA,QAAMC,gBAAgB,GAAGN,UAAU,CAACC,eAAD,CAAnC;AACA,QAAM;AACFM,IAAAA,UADE;AAEFC,IAAAA,iBAFE;AAGFC,IAAAA,eAHE;AAIFC,IAAAA,KAJE;AAKFC,IAAAA;AALE,MAMFL,gBANJ;AAQA,QAAM;AAAED,IAAAA;AAAF,MAAaF,QAAnB;;AACA,QAAMS,QAAQ,GAAIC,CAAD,IAAO;AACpBT,IAAAA,UAAU,CAAC,EACP,GAAGD,QADI;AAEP,OAACU,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFnB,KAAD,CAAV;AAIH,GALD;;AAOA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACK,cAAF,GADoB,CAEpB;;AACA,QAAIb,MAAM,IAAI,EAAd,EAAkB;AACdM,MAAAA,YAAY;AAEZ;AACH,KAPmB,CAQpB;;;AACAF,IAAAA,eAAe,CAACN,QAAD,CAAf;AACH,GAVD;;AAWA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,OAAO,EAAEK,iBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EASKD,UAAU,gBACP;AAAM,IAAA,SAAS,EAAC,2BAAhB;AAA4C,IAAA,QAAQ,EAAEU,QAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,YAFd;AAGI,IAAA,WAAW,EAAC,iBAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,QAAQ,EAAEL,QALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,4BAFd;AAGI,IAAA,KAAK,EAAC,kBAHV;AAII,IAAA,QAAQ,EAAEK,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADO,GAgBP,IAzBR,EA2BKP,KAAK,gBACF;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADE,GAIF,IA/BR,CADJ;AAmCH,CArED;;AAuEA,eAAeR,aAAf","sourcesContent":["import React, { Fragment, useState, useContext } from \"react\";\n\n//importamos el context para usarlo en este componente\n//la idea es que cuando no pulsemos el boton de nuevo formulario\n//no se muestre el formulario, para eso usamos el context\nimport proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst NuevoProyecto = () => {\n    const [proyecto, setpoyecto] = useState({\n        nombre : ''\n    });\n\n    //extraemos el context de formulario\n    const proyectosContext = useContext(proyectoContext);\n    const {\n        formulario,\n        mostrarFormulario,\n        agregarProyecto,    \n        error,\n        mostrarError,\n    } = proyectosContext;\n\n    const { nombre } = proyecto;\n    const onChange = (e) => {\n        setpoyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value,\n        });\n    };\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        ///validar\n        if (nombre == '') {\n            mostrarError()\n\n            return;\n        }\n        //pasar al action\n        agregarProyecto(proyecto);\n    };\n    return (\n        <Fragment>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={mostrarFormulario}\n            >\n                Nuevo Proyecto\n            </button>\n\n            {formulario ? (\n                <form className=\"formulario-nuevo-proyecto\" onSubmit={onSubmit}>\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre Proyecto\"\n                        name=\"nombre\"\n                        onChange={onChange}\n                    />\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value=\"Agregar Proyecto\"\n                        onSubmit={onSubmit}\n                    />\n                </form>\n            ) : null}\n\n            {error ? (\n                <p className=\"mensaje error\">\n                    El nombre del proyecto es obligatorio\n                </p>\n            ) : null}\n        </Fragment>\n    );\n};\n\nexport default NuevoProyecto;\n"]},"metadata":{},"sourceType":"module"}