{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/proyectos/proyectoState.js\";\n//aqui definimos todos los state que vamos a hacer correr por el proyecto junto con las\n//diferentes funciones\nimport React, { useReducer } from \"react\";\nimport proyectoReducer from \"./proyectoReducer\"; //importamos el context que creamos\n\nimport ProyectoContext from \"./proyectoContext\";\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTO, AGREGAR_PROYECTO } from \"../../type/index\"; //aqui definimos el state inicial junto con todos los props\n\nconst ProyectoState = props => {\n  const initialState = {\n    //arreglo de prueba\n    proyectos: [{\n      id: 1,\n      nombre: \"Tirenda Virtual\"\n    }, {\n      id: 2,\n      nombre: \"nhamomarandu\"\n    }, {\n      id: 3,\n      nombre: \"backend de mierda\"\n    }, {\n      id: 4,\n      nombre: \"MERN\"\n    }],\n    formulario: false\n  }; // Dispach para ejecutar las acciones.\n\n  const [state, dispatch] = useReducer(proyectoReducer, initialState); //serie de funciones para el CRUD\n  //*funcion que cambia el estado del formulario\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  };\n\n  const obtenerProyectos = proyecto => {\n    dispatch({\n      type: OBTENER_PROYECTO,\n      payload: proyecto\n    });\n  };\n\n  const agregarProyecto = proyecto => {\n    //insertar proyecto en el state\n    dispatch({\n      type: AGREGAR_PROYECTO,\n      payload: proyecto\n    });\n  }; //en el return ponemos lo que seria el componente principal que vamos a estar importando\n  //durante el proyecto\n\n\n  return /*#__PURE__*/React.createElement(ProyectoContext.Provider, {\n    //pasamos un value que seria el valor inicial del state\n    value: {\n      proyectos: state.proyectos,\n      formulario: state.formulario,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default ProyectoState;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/proyectos/proyectoState.js"],"names":["React","useReducer","proyectoReducer","ProyectoContext","FORMULARIO_PROYECTO","OBTENER_PROYECTO","AGREGAR_PROYECTO","ProyectoState","props","initialState","proyectos","id","nombre","formulario","state","dispatch","mostrarFormulario","type","obtenerProyectos","proyecto","payload","agregarProyecto","children"],"mappings":";AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,EAA+CC,gBAA/C,QAAsE,kBAAtE,C,CAEA;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B,QAAMC,YAAY,GAAG;AACjB;AACAC,IAAAA,SAAS,EAAE,CACP;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KADO,EAEP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KAFO,EAGP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KAHO,EAIP;AAAED,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,MAAM,EAAE;AAAjB,KAJO,CAFM;AAQjBC,IAAAA,UAAU,EAAE;AARK,GAArB,CAD6B,CAY7B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACC,eAAD,EAAkBO,YAAlB,CAApC,CAb6B,CAe7B;AACA;;AACA,QAAMO,iBAAiB,GAAG,MAAM;AAC5BD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb;AADD,KAAD,CAAR;AAGH,GAJD;;AAMA,QAAMc,gBAAgB,GAAEC,QAAQ,IAAI;AAChCJ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEZ,gBADD;AAELe,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAME,eAAe,GAAGF,QAAQ,IAAI;AAEhC;AACAJ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEX,gBADD;AAELc,MAAAA,OAAO,EAAED;AAFJ,KAAD,CAAR;AAIH,GAPD,CA9B6B,CAsC7B;AACA;;;AACA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AACI;AACA,IAAA,KAAK,EAAE;AACHT,MAAAA,SAAS,EAAEI,KAAK,CAACJ,SADd;AAEHG,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAFf;AAIHG,MAAAA,iBAJG;AAKHE,MAAAA,gBALG;AAMHG,MAAAA;AANG,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYKb,KAAK,CAACc,QAZX,CADJ;AAgBH,CAxDD;;AA0DA,eAAef,aAAf","sourcesContent":["//aqui definimos todos los state que vamos a hacer correr por el proyecto junto con las\n//diferentes funciones\n\nimport React, { useReducer } from \"react\";\nimport proyectoReducer from \"./proyectoReducer\";\n//importamos el context que creamos\nimport ProyectoContext from \"./proyectoContext\";\nimport {FORMULARIO_PROYECTO, OBTENER_PROYECTO, AGREGAR_PROYECTO} from \"../../type/index\";\n\n//aqui definimos el state inicial junto con todos los props\nconst ProyectoState = (props) => {\n    const initialState = {\n        //arreglo de prueba\n        proyectos: [\n            { id: 1, nombre: \"Tirenda Virtual\" },\n            { id: 2, nombre: \"nhamomarandu\" },\n            { id: 3, nombre: \"backend de mierda\" },\n            { id: 4, nombre: \"MERN\" },\n        ],\n        formulario: false,\n    };\n\n    // Dispach para ejecutar las acciones.\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n\n    //serie de funciones para el CRUD\n    //*funcion que cambia el estado del formulario\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO,\n        });\n    };\n\n    const obtenerProyectos =proyecto => {\n        dispatch({\n            type: OBTENER_PROYECTO,\n            payload: proyecto\n        })\n    };\n\n    const agregarProyecto = proyecto => {\n\n        //insertar proyecto en el state\n        dispatch({\n            type: AGREGAR_PROYECTO,\n            payload: proyecto\n        })\n    }\n    //en el return ponemos lo que seria el componente principal que vamos a estar importando\n    //durante el proyecto\n    return (\n        <ProyectoContext.Provider\n            //pasamos un value que seria el valor inicial del state\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                \n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n            }}\n        >\n            {/* esta linea dice que va a estar pasando todo el state dentro del sus hijos */}\n            {props.children}\n        </ProyectoContext.Provider>\n    );\n};\n\nexport default ProyectoState;\n"]},"metadata":{},"sourceType":"module"}