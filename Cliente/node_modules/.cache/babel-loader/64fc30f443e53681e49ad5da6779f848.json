{"ast":null,"code":"var _jsxFileName = \"/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/auth/authState.js\";\nimport React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR } from \"../../type\";\n\nconst AuthState = props => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    autenticado: null,\n    usuario: null,\n    mensaje: null\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registraUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post(\"/api/usuarios\", datos); // console.log(respuesta);\n\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.date\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: REGISTRO_ERROR\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registraUsuario\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/marcos/Desktop/CursoReact/Proyectos/MERNTask/Cliente/src/context/auth/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","state","dispatch","registraUsuario","datos","respuesta","post","type","payload","date","error","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SACIC,gBADJ,EAEIC,cAFJ,EAGIC,eAHJ,EAIIC,aAJJ,EAKIC,WALJ,QAMO,YANP;;AAQA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADU;AAEjBC,IAAAA,WAAW,EAAE,IAFI;AAGjBC,IAAAA,OAAO,EAAE,IAHQ;AAIjBC,IAAAA,OAAO,EAAE;AAJQ,GAArB;AAOA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBnB,UAAU,CAACE,WAAD,EAAcS,YAAd,CAApC;;AAEA,QAAMS,eAAe,GAAG,MAAOC,KAAP,IAAiB;AACrC,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMnB,YAAY,CAACoB,IAAb,CAAkB,eAAlB,EAAmCF,KAAnC,CAAxB,CADA,CAEA;;AAEAF,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEpB,gBADD;AAELqB,QAAAA,OAAO,EAAEH,SAAS,CAACI;AAFd,OAAD,CAAR;AAMH,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAR,MAAAA,QAAQ,CAAC;AACLK,QAAAA,IAAI,EAAEnB;AADD,OAAD,CAAR;AAGH;AACJ,GAlBD;;AAmBA,sBACI,oBAAC,WAAD,CAAa,QAAb;AACI,IAAA,KAAK,EAAE;AACHO,MAAAA,KAAK,EAAEM,KAAK,CAACN,KADV;AAEHG,MAAAA,WAAW,EAAEG,KAAK,CAACH,WAFhB;AAGHC,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAHZ;AAIHC,MAAAA,OAAO,EAAEC,KAAK,CAACD,OAJZ;AAMHG,MAAAA;AANG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUKV,KAAK,CAACoB,QAVX,CADJ;AAcH,CA3CD;;AA6CA,eAAerB,SAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./authReducer\";\nimport clienteAxios from \"../../config/axios\";\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n} from \"../../type\";\n\nconst AuthState = (props) => {\n    const initialState = {\n        token: localStorage.getItem(\"token\"),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n    };\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registraUsuario = async (datos) => {\n        try {\n            const respuesta = await clienteAxios.post(\"/api/usuarios\", datos);\n            // console.log(respuesta);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.date\n\n            })\n            \n        } catch (error) {\n            console.log(error);\n\n            dispatch({\n                type: REGISTRO_ERROR\n            });\n        }\n    };\n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n\n                registraUsuario,\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}